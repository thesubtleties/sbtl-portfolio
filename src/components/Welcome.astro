---
import SmoothScroll from "./react/SmoothScroll"
---

<section id="home" class="min-h-screen flex items-center justify-center px-4">
	<div class="dictionary-entry">
	  <div class="word-section">
		<h1 class="word">sbtl</h1>
		<span class="pronunciation">/s åtl/</span>
	  </div>
	  
	  <div class="part-of-speech">adj.</div>
	  
	  <div class="definitions">
		<div class="definition-item">
		  <span class="number">1.</span>
		  <div class="definition">
			<span class="typing-effect-1">The art of refined minimalism in digital craftsmanship;</span>
			<span class="typing-effect-2">attention to microscopic details that collectively create exceptional user experiences.</span>
		  </div>
		</div>
		
		<div class="definition-item delayed-fade">
		  <span class="number">2.</span>
		  <p class="definition">
			<span class="italic">tech.</span> The practice of implementing thoughtful, delicate interactions that enhance user engagement without demanding attention.
		  </p>
		</div>
		
		<div class="examples delayed-fade">
		  <p><span class="italic">"The sbtl touches in the application's interface created a seamless experience that users felt rather than noticed."</span></p>
		</div>
	  </div>
	</div>
  <SmoothScroll 
    client:load
    scrollSensitivity={15}    
    debounceTime={30}         
    scrollThreshold={40}      
    animationDuration={800}  
  />
  </section>
  
  <style>
	.dictionary-entry {
	  font-family: 'Crimson Text', Georgia, serif;
	  color: var(--color-primary);
	  padding: 2rem;
	  max-width: 800px;
	  width: 100%;
	  margin: 0 auto;
	}
  
	.word-section {
	  display: flex;
	  align-items: baseline;
	  gap: 1rem;
	  margin-bottom: 0.5rem;
	  flex-wrap: wrap;
	}
  
	.word {
	  font-size: 2.5rem;
	  font-weight: 700;
	  color: var(--color-primary);
	  letter-spacing: -0.5px;
	}
  
	.pronunciation {
	  font-size: 1.1rem;
	  color: var(--color-accent);
	  font-family: 'Inter', sans-serif;
	}
  
	.part-of-speech {
	  font-style: italic;
	  color: var(--color-accent);
	  margin-bottom: 1rem;
	}
  
	.definitions {
	  display: flex;
	  flex-direction: column;
	  gap: 1rem;
	}
  
	.definition-item {
	  display: flex;
	  gap: 0.5rem;
	}
  
	.number {
	  color: var(--color-accent);
	  flex-shrink: 0;
	}
  
	.definition {
	  font-size: 1.1rem;
	  line-height: 1.6;
	  margin-bottom: 0.5rem;
	  word-wrap: break-word;
	}
  
	.examples {
	  margin-left: 1.5rem;
	  margin-top: 1rem;
	  color: var(--color-accent);
	  font-size: 0.95rem;
	  font-style: italic;
	}
  

  .typing-effect-1, .typing-effect-2 {
    display: inline-block;
    position: relative;
    white-space: pre-wrap;
  }

  .typing-effect-1 {
    animation: typing1 2s steps(40, end);
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
    animation-fill-mode: forwards;
  }

  .typing-effect-2 {
    opacity: 0;
    animation: typing2 2.5s steps(50, end);
    animation-delay: 2.2s; /* Start after first line + small pause */
    animation-fill-mode: forwards;
  }

  .typing-effect-1::after {
    content: '';
    position: absolute;
    right: -4px;
    top: 0;
    height: 100%;
    width: 2px;
    background-color: var(--color-accent);
    animation: blink 0.75s step-end infinite;
    animation-duration: 2.2s; /* Stop blinking when second line starts */
  }

  .typing-effect-2::after {
    content: '';
    position: absolute;
    right: -4px;
    top: 0;
    height: 100%;
    width: 2px;
    background-color: var(--color-accent);
    animation: blink 0.75s step-end infinite;
    animation-delay: 2.2s;
  }

  .delayed-fade {
    opacity: 0;
    animation: fadeIn 0.5s ease-in forwards;
    animation-delay: 5s; /* Start after both typing animations */
  }

  @keyframes typing1 {
    from { 
      clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
    }
    to { 
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
  }

  @keyframes typing2 {
    from { 
      opacity: 0;
      clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
    }
    to { 
      opacity: 1;
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
  }

  @keyframes blink {
    from, to { background-color: transparent }
    50% { background-color: var(--color-accent); }
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  

	@media (max-width: 768px) {
	  .dictionary-entry {
		padding: 1.5rem;
	  }
  
	  .word {
		font-size: 2rem;
	  }
  
	  .definition {
		font-size: 1rem;
	  }
	  
	  .examples {
		margin-left: 1rem;
	  }
	}

	:global(.scroll-indicator) {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    color: var(--color-accent);
    opacity: 0.6;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0;
  }

  :global(.scroll-indicator:hover) {
    opacity: 1;
  }

  @keyframes pulse {
    0% {
      opacity: 0.6;
      transform: translateX(-50%) translateY(0);
    }
    50% {
      opacity: 0.3;
      transform: translateX(-50%) translateY(5px);
    }
    100% {
      opacity: 0.6;
      transform: translateX(-50%) translateY(0);
    }
  }

  :global(.scroll-indicator svg) {
    animation: pulse 2s infinite;
  }
  </style>